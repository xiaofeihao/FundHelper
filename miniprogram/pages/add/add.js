"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var netService_1 = require("../../network/netService");
var util_1 = require("../../utils/util");
Page({
    data: {
        title: "",
        frontImage: "",
        totalPages: 0,
        currentPage: 0,
        lastDate: "",
        author: "",
        description: "",
        readReason: "",
        thoughts: undefined,
        reading: true,
        percent: 0,
        startPage: 0,
        endPage: 0,
        publishHouse: "",
        publishDate: "",
        openThoughtButton: false,
        pageFrom: 1,
        currentTitle: ""
    },
    onLoad: function (option) {
        console.log(option);
        if (Number(option.from) === 0) {
            if (option.errMessage) {
                this.setData({
                    pageFrom: 0
                });
                wx.showToast({
                    title: option.errMessage,
                    icon: 'none',
                    duration: 2000
                });
            }
            else {
                var pages = option.totalPages ? option.totalPages : '0';
                var length_1 = pages.length;
                if (pages.lastIndexOf('页') !== -1) {
                    pages = pages.substring(0, length_1 - 1);
                }
                this.setData({
                    title: option.title ? option.title : "",
                    author: option.author ? option.author : "",
                    frontImage: option.imageId ? netService_1.getBookImage(option.imageId) : "",
                    publishHouse: option.publishHouse ? option.publishHouse : "",
                    totalPages: Number(pages),
                    pageFrom: 0,
                    currentTitle: option.title ? option.title : "",
                });
            }
        }
        else if (Number(option.from) === 1) {
            console.log("点击手动添加进来的");
            this.setData({
                pageFrom: 1
            });
        }
        else if (Number(option.from) === 2) {
            this.setData({
                title: option.title,
                author: option.author,
                frontImage: option.frontImage ? option.frontImage : netService_1.getBookImage(option.imageId),
                publishHouse: option.publishHouse,
                totalPages: Number(option.totalPages),
                currentPage: Number(option.currentPage),
                publishDate: option.publishDate,
                lastDate: option.lastDate,
                reading: option.reading,
                readReason: option.readReason,
                startPage: Number(option.startPage),
                endPage: Number(option.endPage),
                percent: Number(option.percent),
                description: option.description,
                pageFrom: 2,
                currentTitle: option.title
            });
        }
    },
    clickImage: function () {
        var pageThis = this;
        wx.chooseImage({
            count: 1,
            sizeType: ['original', 'compressed'],
            sourceType: ['album', 'camera'],
            success: function (res) {
                pageThis.setData({
                    frontImage: res.tempFilePaths[0]
                });
            }
        });
    },
    bookNameInput: function (e) {
        this.setData({
            title: e.detail.value
        });
    },
    bookAuthorInput: function (e) {
        this.setData({
            author: e.detail.value
        });
    },
    bookTotalPageInput: function (e) {
        this.setData({
            totalPages: Number(e.detail.value)
        });
    },
    readingStatusChange: function (e) {
        this.setData({
            reading: e.detail.value
        });
    },
    bookStartInput: function (e) {
        var start = 0;
        try {
            start = Number(e.detail.value);
        }
        catch (e) {
            start = this.data.startPage;
        }
        console.log(start);
        this.setData({
            startPage: start
        });
    },
    bookEndInput: function (e) {
        var end = 0;
        try {
            end = Number(e.detail.value);
        }
        catch (e) {
            end = this.data.startPage;
        }
        console.log(end);
        this.setData({
            endPage: end
        });
    },
    bookReasonInput: function (e) {
        this.setData({
            readReason: e.detail.value
        });
    },
    bookPublishHouseInput: function (e) {
        this.setData({
            publishHouse: e.detail.value
        });
    },
    bookPublishDateInput: function (e) {
        this.setData({
            publishDate: e.detail.value
        });
    },
    bookDescriptionInput: function (e) {
        this.setData({
            description: e.detail.value
        });
    },
    clickUpdateSave: function () {
        var _this = this;
        var tempPercent = 0;
        var tempPages = this.data.endPage - this.data.startPage;
        console.log(tempPages);
        if (this.data.totalPages !== 0) {
            tempPercent = tempPages * 100 / this.data.totalPages;
        }
        var tempCurrent = this.data.currentPage + tempPages;
        var date = util_1.formatTime(new Date());
        var book = {
            title: this.data.title,
            frontImage: this.data.frontImage,
            author: this.data.author,
            totalPages: this.data.totalPages,
            readReason: this.data.readReason,
            reading: this.data.reading,
            currentPage: tempCurrent,
            lastDate: date,
            description: this.data.description,
            thoughts: this.data.thoughts,
            percent: tempPercent,
            startPage: this.data.startPage,
            endPage: this.data.endPage,
            publishDate: this.data.publishDate,
            publishHouse: this.data.publishHouse
        };
        var errMessage = util_1.isBookInfoAvailable(book);
        if (errMessage) {
            wx.showToast({
                title: errMessage,
                icon: 'none',
                duration: 2000
            });
        }
        else {
            console.log(book);
            wx.showLoading({
                title: "正在保存...",
                mask: true
            });
            var books_1 = wx.getStorageSync("books");
            if (books_1) {
                if (this.data.pageFrom === 2) {
                    books_1 = books_1.filter(function (value) { return value.title !== _this.data.currentTitle; });
                    books_1.push(book);
                    this.saveBooks(books_1);
                    return;
                }
                var tempBook_1 = books_1.filter(function (value) { return value.title === _this.data.currentTitle; });
                if (tempBook_1.length > 0) {
                    wx.hideLoading();
                    wx.showModal({
                        title: "同名提示",
                        content: "“" + book.title + "”已经存在，是否覆盖？",
                        success: function (res) {
                            if (res.confirm) {
                                wx.showLoading({
                                    title: "正在保存...",
                                    mask: true
                                });
                                books_1 = books_1.filter(function (value) { return value.title !== tempBook_1[0].title; });
                                books_1.push(book);
                                _this.saveBooks(books_1);
                            }
                        }
                    });
                }
                else {
                    books_1.push(book);
                    this.saveBooks(books_1);
                }
            }
            else {
                books_1 = [];
                books_1.push(book);
                this.saveBooks(books_1);
            }
        }
    },
    saveBooks: function (books) {
        var tempBooks = books.reverse();
        wx.setStorage({
            key: "books",
            data: tempBooks,
            success: function () {
                wx.hideLoading();
                wx.navigateBack({
                    delta: 1
                });
            },
            fail: function () {
                wx.hideLoading();
                wx.showToast({
                    title: "保存失败",
                    icon: "none",
                    duration: 2000
                });
            }
        });
    },
    clickDelete: function () {
        var _this = this;
        wx.showModal({
            title: "删除",
            content: "确定要删除吗？",
            success: function (res) {
                if (res.confirm) {
                    var books = wx.getStorageSync("books");
                    if (books) {
                        books = books.filter(function (value) { return value.title !== _this.data.currentTitle; });
                        _this.saveBooks(books);
                    }
                }
            }
        });
    }
});
//# sourceMappingURL=data:application/json;base64,